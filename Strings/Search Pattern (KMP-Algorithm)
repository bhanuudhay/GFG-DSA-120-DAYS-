problem link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/string-gfg-160/problem/search-pattern0205

class Solution {
  public:
    void calcLps(string& pat , vector<int> &lps)
    {
        int M= pat.size();
        int i =1;
        int length =0;
        lps[0] = 0 ;
        while(i < M)
        {
            if(pat[i] == pat[length])
            {
                length++;
                lps[i] = length;
                i++;
            }
            else 
            {
                if(length!=0)
                {
                    length = lps[length-1];
                }
                else
                {
                    lps[i] =0;
                    i++;
                }
            }
        }
        
    }
    vector<int> search(string& pat, string& txt) {
        // code here
        int N  =txt.size();
        int M = pat.size();
        vector<int> result;
        vector<int> lps(M,0);
        calcLps(pat,lps);
        int i = 0;
        int j =0;
        while(i < N)
        {
            if(txt[i] == pat[j])
            {
                i++;
                j++;
            }
            if(j == M)
            {
                result.push_back(i-j);
                j = lps[j-1];
            }
            else if(i < N  && txt[i] != pat[j])
            {
                if(j!=0)
                {
                    j = lps[j-1];
                }
                else
                {
                    i++;
                }
            }
        }
        return result;
    }
};

Time Complexity: O(M + N)
Space Complexity: O(M + N)
