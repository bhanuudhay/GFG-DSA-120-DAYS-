problem link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/two-pointer-technique-gfg-160/problem/trapping-rain-water-1587115621

class Solution {
  public:
    vector<int> getLeftMax(vector<int> &arr, int n)
    {
        vector<int> leftMax(n);
        leftMax[0] = arr[0];
        for(int i = 1 ; i<n ;i++)
        {
            leftMax[i] = max(leftMax[i-1], arr[i]);
        }
        return leftMax;
    }
    vector<int> getRightMax(vector<int> &arr, int n)
    {
        vector<int> rightMax(n);
        rightMax[n-1] = arr[n-1];
        for(int i = n-2 ; i >= 0 ;i--)
        {
            rightMax[i] = max(rightMax[i+1] , arr[i]);
        }
        return rightMax;
    }
    int maxWater(vector<int> &arr) {
        // code here
        int n = arr.size();
        vector<int>leftMax = getLeftMax(arr,n);
        vector<int>rightMax = getRightMax(arr,n);
        int sum = 0;
        for(int i = 0 ; i < n ;i++)
        {
            int h = min(leftMax[i] , rightMax[i]) - arr[i];
            sum+=h;
        }
        return sum;
    }
};

Time Complexity: O(n)
Auxiliary Space: O(1)
