Link : https://www.geeksforgeeks.org/batch/gfg-160-problems/track/recursion-and-backtracking-gfg-160/problem/solve-the-sudoku-1587115621


class Solution {
  public:
    // Function to find a solved Sudoku.
    bool isSafe(int row , int col , vector<vector<int>> &mat , int val)
    {
        for(int i =0 ; i< mat.size() ;i++)
        {
            if(mat[row][i] ==val)
            {
                return false;
            }
            if(mat[i][col] == val)
            {
                return false;
            }
            if(mat[3*(row/3) + i%3][3*(col/3)+i/3] == val)
            {
                return  false;
            }
        }
        return true;
    }
    bool solve(vector<vector<int>> &mat)
    {
        int n = mat.size();
        int m = mat[0].size();
        for(int i =0 ; i<n ;i++)
        {
            for(int j =0 ;j< m;j++)
            {
                if(mat[i][j] == 0)
                {
                    for(int val = 1;val<=9;val++)
                    {
                        if(isSafe(i,j,mat,val))
                        {
                            mat[i][j] = val;
                            bool agla = solve(mat);
                            if(agla)
                            {
                                return true;
                            }
                            mat[i][j] =0;
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<int>> &mat) {
        // code here
        solve(mat);
    }
};
