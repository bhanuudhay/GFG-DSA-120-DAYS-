Link : https://www.geeksforgeeks.org/batch/gfg-160-problems/track/linked-list-gfg-160/problem/add-two-numbers-represented-by-linked-lists

class Solution {
  public:
    Node * rev(Node *&head)
    {
        if(head== NULL || head->next == NULL)
        {
            return head;
        }
        Node * curr = head;
        Node * prev= NULL;
        Node * ford= NULL;
        while(curr!=NULL)
        {
            ford = curr->next;
            curr->next = prev;
            prev = curr;
            curr = ford;
        }
        return prev;
    }
    
    void insertNode(Node * &head ,Node * &tail , int d)
    {
        Node * newNode = new Node(d);
        if(tail == NULL)
        {
            head=  tail = newNode;
        }
        tail->next = newNode;
        tail=newNode;
    }
    
    Node * sum(Node *& head1, Node *&head2)
    {
            int carry = 0;
            Node * temp = NULL;
            Node *tail = NULL;
            while(head1!=NULL || head2!=NULL || carry!=0)
            {
            int val1=0;
            if(head1!=NULL)
            {
                val1 = head1->data;
            }
            int val2 = 0;
            if(head2!=NULL)
            {
                val2 = head2->data;
            }
            int sum = val1+val2+carry;
            int digit = sum%10;
            carry = sum/10;
            insertNode(temp,tail,digit);
            if(head1!=NULL)
            {
                head1 = head1->next;
            }
            if(head2!=NULL)
            {
                head2 = head2->next;
            }
        }
        return temp;
    }
    Node* addTwoLists(Node* num1, Node* num2) {
        // code here
        num1 = rev(num1);
        num2 = rev(num2);
        
        Node * ans = sum(num1,num2);
        ans = rev(ans);
        while((ans->data == 0) && ans->next!=NULL)
        {
            Node *del = ans;
            delete del;
            ans = ans->next;
        }
        return ans;
    }
};

Time Complexity: O(n1 + n2)
Space Complexity: O(n1 + n2)
