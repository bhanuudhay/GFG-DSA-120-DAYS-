Link : https://www.geeksforgeeks.org/batch/gfg-160-problems/track/linked-list-gfg-160/problem/reverse-a-linked-list-in-groups-of-given-size

class Solution {
  public:
    Node *reverseKGroup(Node *head, int k) {
        // code here
        if(head == NULL)
        {
            return NULL;
        }
        Node *curr = head;
        Node * prev = NULL;
        Node * ford = NULL;
        int cnt = 0;
        while(curr!=NULL && cnt < k)
        {
            ford = curr->next;
            curr->next= prev;
            prev = curr;
            curr= ford;
            cnt++;
        }
        
        if(ford!=NULL)
        {
            head->next = reverseKGroup(ford,k);
        }
        return prev;
    }
};

Time Complexity: O(n)
pace Complexity: O(n / k), where n is the number of nodes and k is the size of each group
